version: 2.1
orbs:
  heroku: circleci/heroku@2.0.0
jobs:
  build:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - run:
          name: Install pip packages
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: Test with pytest
          command: |
            . venv/bin/activate
            pytest
      - run:
          name: run linting and metrics
          command: |
            . venv/bin/activate
            flake8
  containerize:
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build and push to Docker Hub
          command: |
            IMAGE_TAG="${CIRCLE_SHA1}"
            docker build -t $DOCKER_HUB_USER_ID/$IMAGE_NAME:$IMAGE_TAG .
            echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER_ID" --password-stdin
            docker push $DOCKER_HUB_USER_ID/$IMAGE_NAME:$IMAGE_TAG
  deploy:
      executor: heroku/default
      steps:
        - checkout
        - heroku/install
        - heroku/deploy-via-git
  notify-sentry-deploy:
    executor:
    # Specify executor for running deploy job
    environment:
      SENTRY_ORG: $SENTRY_ORG
      SENTRY_PROJECT: oc_lettings_site
      SENTRY_ENVIRONMENT: production
    steps:
      - checkout
      - run:
          name: Create release and notify Sentry of deploy
          command: |
            curl -sL https://sentry.io/get-cli/ | bash
            export SENTRY_RELEASE=$(sentry-cli releases propose-version)
            sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
            sentry-cli releases set-commits $SENTRY_RELEASE --auto
            sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps path-to-sourcemaps-if-applicable
            sentry-cli releases finalize $SENTRY_RELEASE
            sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT
workflows:
  build-master:
    jobs:
      - build
      - containerize:
          filters:
            branches:
              only: master
          requires:
            - build
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - build
            - containerize
      - notify-sentry-deploy:
          filters:
            branches:
              only: master
          requires:
            - deploy

